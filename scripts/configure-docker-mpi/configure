#!/bin/bash
#==============================================================================
# Copyright (C) 2017 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.rc ]; then
            source "${a}"/clusterware/config.rc
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
  local master_address
  if [[ "${cw_INSTANCE_role}" == "master" ]]; then
    master_address="localhost"
  else
    files_load_config --optional config config/cluster
    master_address=${cw_CLUSTER_master}
  fi


  if [ -z "${master_address}" ]; then
    action_die "No master IP specified in config/cluster/config.rc, cannot configure MPI Docker"
  fi
  cat > "/etc/docker/daemon.json" <<EOF
{
"cluster-store": "consul://${cw_CLUSTER_master}:8500"
}
EOF
  distro_restart_service docker

  if [[ "${cw_INSTANCE_role}" == "master" ]]; then
    docker run -d -p 8500:8500 -h consul --name consul progrium/consul -server -bootstrap
    docker network create -d overlay gridware-mpi
    # TODO - specify a subnet for docker to use
  fi

}

setup
require action
require distro
require files
require process

files_load_config instance config/cluster

r=$(type -p docker)
if [ $? != 0 -o ! -x "$r" ]; then
    action_die "unable to locate Docker installation"
elif ! process_reexec_sg docker --plain "$@"; then
   action_die "unable to find Docker group"
fi

main "$@"
